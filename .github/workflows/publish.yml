name: Publish Package

on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@garotm'
      
      - name: Download artifacts from release workflow
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: vscode-extension/out/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      
      - name: Configure npm for publishing
        working-directory: ./vscode-extension
        run: |
          echo "@garotm:registry=https://npm.pkg.github.com" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> .npmrc
      
      - name: Prepare and publish package
        working-directory: ./vscode-extension
        run: |
          # Save original package.json
          cp package.json package.json.bak
          
          # Modify package.json for npm publish
          jq '.name = "@garotm/cursor-rules-dynamic" | del(.publishConfig.name)' package.json > temp.json && mv temp.json package.json
          
          # Install dependencies without running scripts
          npm ci --ignore-scripts
          
          # Publish using existing build
          npm publish --access public --ignore-scripts
          
          # Restore original package.json
          mv package.json.bak package.json
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}