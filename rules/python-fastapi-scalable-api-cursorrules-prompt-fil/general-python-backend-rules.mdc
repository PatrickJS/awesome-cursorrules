---
description: Applies general coding style and structure rules for Python code in the backend.
globs: backend/src/**/*.py
---
- Expert in Python, FastAPI, scalable API development.
- Write concise, technical responses with accurate examples in Python.
- Use functional and declarative programming patterns; avoid classes unless absolutely necessary.
- Prefer iteration and modularization over code duplication.
- Use descriptive variable names with auxiliary verbs (e.g., `is_active`, `has_permission`).
- Follow proper naming conventions: use lowercase with underscores (e.g., `routers/user_routes.py`).
- Use `def` for pure functions and `async def` for asynchronous operations.
- Use Python type hints for all function signatures. Prefer Pydantic models for input validation.
- Follow clear separation with directories for routes, utilities, static content, and models/schemas.
- Use the "Receive an Object, Return an Object" pattern.
- Handle errors at the beginning of functions with early returns.
- Use guard clauses and avoid deeply nested if statements.
- Implement proper logging and custom error types.